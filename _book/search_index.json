[
["impute-missingness.html", "Chapter 13 Impute missingness", " Chapter 13 Impute missingness # load libraries library(tidyverse) library(naniar) Create x, a vector, with values NA, NaN, Inf, “.”, and “missing” x &lt;- c(NA, NaN, Inf, &quot;.&quot;, &quot;missing&quot;) # Use any_na() and are_na() on to explore the missings any_na(x) ## [1] TRUE are_na(x) ## [1] TRUE FALSE FALSE FALSE FALSE # Use n_miss() to count the total number of missing values in x n_miss(x) ## [1] 1 # Use n_complete() on dat_hw to count the total number of complete values n_complete(x) ## [1] 4 Use prop_miss() and prop_complete on dat_hw to count the total number of missing values in each of the variables: prop_miss(x) ## [1] 0.2 prop_complete(x) ## [1] 0.8 Use tarwars data to use to find missing values summarizing missingness starwars %&gt;% miss_var_summary() ## # A tibble: 14 x 3 ## variable n_miss pct_miss ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; ## 1 birth_year 44 50.6 ## 2 mass 28 32.2 ## 3 homeworld 10 11.5 ## 4 height 6 6.90 ## 5 hair_color 5 5.75 ## 6 sex 4 4.60 ## 7 gender 4 4.60 ## 8 species 4 4.60 ## 9 name 0 0 ## 10 skin_color 0 0 ## 11 eye_color 0 0 ## 12 films 0 0 ## 13 vehicles 0 0 ## 14 starships 0 0 starwars %&gt;% group_by(birth_year) %&gt;% miss_var_summary() ## # A tibble: 481 x 4 ## # Groups: birth_year [37] ## birth_year variable n_miss pct_miss ## &lt;dbl&gt; &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; ## 1 19 name 0 0 ## 2 19 height 0 0 ## 3 19 mass 0 0 ## 4 19 hair_color 0 0 ## 5 19 skin_color 0 0 ## 6 19 eye_color 0 0 ## 7 19 sex 0 0 ## 8 19 gender 0 0 ## 9 19 homeworld 0 0 ## 10 19 species 0 0 ## # … with 471 more rows # Return the summary of missingness in each case, by group starwars %&gt;% miss_case_summary() %&gt;% head() ## # A tibble: 6 x 3 ## case n_miss pct_miss ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 86 7 50 ## 2 37 5 35.7 ## 3 28 4 28.6 ## 4 40 4 28.6 ## 5 80 4 28.6 ## 6 82 4 28.6 starwars %&gt;% group_by(birth_year) %&gt;% miss_case_summary() %&gt;% head() ## # A tibble: 6 x 4 ## # Groups: birth_year [4] ## birth_year case n_miss pct_miss ## &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 19 1 0 0 ## 2 19 2 0 0 ## 3 112 1 1 7.69 ## 4 33 1 1 7.69 ## 5 41.9 1 0 0 ## 6 41.9 2 0 0 # Tabulate missingness in each variable and case of the dataset starwars %&gt;% miss_var_table() %&gt;% head() ## # A tibble: 6 x 3 ## n_miss_in_var n_vars pct_vars ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 0 6 42.9 ## 2 4 3 21.4 ## 3 5 1 7.14 ## 4 6 1 7.14 ## 5 10 1 7.14 ## 6 28 1 7.14 # Tabulate the missingness in each variable and in grouped_by starwars %&gt;% miss_case_table() %&gt;% head() ## # A tibble: 6 x 3 ## n_miss_in_case n_cases pct_cases ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 0 29 33.3 ## 2 1 34 39.1 ## 3 2 14 16.1 ## 4 3 1 1.15 ## 5 4 7 8.05 ## 6 5 1 1.15 starwars %&gt;% group_by(birth_year) %&gt;% miss_var_table() %&gt;% head() ## # A tibble: 6 x 4 ## # Groups: birth_year [4] ## birth_year n_miss_in_var n_vars pct_vars ## &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 19 0 13 100 ## 2 112 0 12 92.3 ## 3 112 1 1 7.69 ## 4 33 0 12 92.3 ## 5 33 1 1 7.69 ## 6 41.9 0 13 100 # Tabulate the missingness in each variable and in grouped_by starwars %&gt;% miss_case_table() %&gt;% head() ## # A tibble: 6 x 3 ## n_miss_in_case n_cases pct_cases ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 0 29 33.3 ## 2 1 34 39.1 ## 3 2 14 16.1 ## 4 3 1 1.15 ## 5 4 7 8.05 ## 6 5 1 1.15 starwars %&gt;% group_by(birth_year) %&gt;% miss_case_table() %&gt;% head() ## # A tibble: 6 x 4 ## # Groups: birth_year [6] ## birth_year n_miss_in_case n_cases pct_cases ## &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 19 0 2 100 ## 2 112 1 1 100 ## 3 33 1 1 100 ## 4 41.9 0 2 100 ## 5 52 0 2 100 ## 6 47 0 1 100 Other summaries of missingness Calculate the summaries for each span of missingness For each birth_year variable, calculate the run of missingness: starwars %&gt;% miss_var_run(var = birth_year) ## # A tibble: 27 x 2 ## run_length is_na ## &lt;int&gt; &lt;chr&gt; ## 1 7 complete ## 2 1 missing ## 3 9 complete ## 4 1 missing ## 5 9 complete ## 6 1 missing ## 7 1 complete ## 8 1 missing ## 9 1 complete ## 10 1 missing ## # … with 17 more rows # For each `birth_year` variable, calculate the run of missingness every 2 years starwars %&gt;% miss_var_span(var = birth_year, span_every = 2) ## # A tibble: 44 x 5 ## span_counter n_miss n_complete prop_miss prop_complete ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 0 2 0 1 ## 2 2 0 2 0 1 ## 3 3 0 2 0 1 ## 4 4 1 1 0.5 0.5 ## 5 5 0 2 0 1 ## 6 6 0 2 0 1 ## 7 7 0 2 0 1 ## 8 8 0 2 0 1 ## 9 9 1 1 0.5 0.5 ## 10 10 0 2 0 1 ## # … with 34 more rows # Visualize missing values vis_miss(starwars) # Visualize and cluster all of the missingness vis_miss(starwars, cluster = TRUE) # Visualize and sort the columns by missingness vis_miss(starwars, sort_miss = TRUE) Visualizing missing cases and variables Visualize the number of missings in variables using gg_miss_var(): gg_miss_var(starwars) gg_miss_var(starwars, facet = birth_year) # Explore the number of missings in cases using `gg_miss_case()` and facet by the variable `birth_year` gg_miss_var(starwars) gg_miss_case(starwars, facet = birth_year) # Explore the missingness pattern using gg_miss_upset() gg_miss_upset(starwars) # Explore how the missingness changes across the birth_year variable using gg_miss_fct() gg_miss_fct(starwars, fct = birth_year) ## Warning: Removed 13 rows containing missing values (geom_tile). # and explore how missingness changes for a span of 2 years gg_miss_span(starwars, var =birth_year, span_every = 100, facet = mass) # also possible to facet Explicitly missing values Searching for and replacing missing values df &lt;- tibble::tribble( ~name, ~x, ~y, ~z, &quot;N/A&quot;, &quot;1&quot;, &quot;N/A&quot;, &quot;-100&quot;, &quot;N/A&quot;, &quot;3&quot;, &quot;Not Available&quot;, &quot;-99&quot;, &quot;N/A&quot;, &quot;NA&quot;, &quot;29&quot;, &quot;-98&quot;, &quot;Not Available&quot;, &quot;-99&quot;, &quot;25&quot;, &quot;-101&quot;, &quot;John Smith&quot;, &quot;-98&quot;, &quot;28&quot;, &quot;-1&quot;) # Explore the strange missing values &quot;N/A&quot; miss_scan_count(data = df, search = list(&quot;N/A&quot;)) ## # A tibble: 4 x 2 ## Variable n ## &lt;chr&gt; &lt;int&gt; ## 1 name 3 ## 2 x 0 ## 3 y 1 ## 4 z 0 # Explore the strange missing values &quot;missing&quot; miss_scan_count(data = df, search = list(&quot;missing&quot;)) ## # A tibble: 4 x 2 ## Variable n ## &lt;chr&gt; &lt;int&gt; ## 1 name 0 ## 2 x 0 ## 3 y 0 ## 4 z 0 # Explore the strange missing values &quot;na&quot; miss_scan_count(data = df, search = list(&quot;na&quot;)) ## # A tibble: 4 x 2 ## Variable n ## &lt;chr&gt; &lt;int&gt; ## 1 name 0 ## 2 x 0 ## 3 y 0 ## 4 z 0 # Explore the strange missing values &quot;Not Available&quot; miss_scan_count(data = df, search = list(&quot;Not Available&quot;)) ## # A tibble: 4 x 2 ## Variable n ## &lt;chr&gt; &lt;int&gt; ## 1 name 1 ## 2 x 0 ## 3 y 1 ## 4 z 0 # Explore the strange missing values &quot; &quot; (a single space) miss_scan_count(data = df, search = list(&quot; &quot;)) ## # A tibble: 4 x 2 ## Variable n ## &lt;chr&gt; &lt;int&gt; ## 1 name 2 ## 2 x 0 ## 3 y 1 ## 4 z 0 # Explore all of the strange missing values, &quot;N/A&quot;, &quot;missing&quot;, &quot;na&quot;, &quot; &quot; miss_scan_count(data = df, search = list(&quot;N/A&quot;, &quot;missing&quot;,&quot;na&quot;, &quot; &quot;, &quot;Not Available&quot;)) ## # A tibble: 4 x 2 ## Variable n ## &lt;chr&gt; &lt;int&gt; ## 1 name 5 ## 2 x 0 ## 3 y 2 ## 4 z 0 # Replace the strange missing values &quot;N/A&quot;, &quot;na&quot;, and &quot;missing&quot; with `NA` for the variables x and y df_clean &lt;- replace_with_na(df, replace = list(x = c(&quot;N/A&quot;, &quot;missing&quot;,&quot;na&quot;, &quot; &quot;, &quot;Not Available&quot;), y = c(&quot;N/A&quot;, &quot;missing&quot;,&quot;na&quot;, &quot; &quot;, &quot;Not Available&quot;))) Test if df_clean still has these values in it? miss_scan_count(df_clean, search = list(&quot;N/A&quot;, &quot;missing&quot;,&quot;na&quot;, &quot; &quot;, &quot;Not Available&quot;)) ## # A tibble: 4 x 2 ## Variable n ## &lt;chr&gt; &lt;int&gt; ## 1 name 5 ## 2 x 0 ## 3 y 0 ## 4 z 0 # Use `replace_with_na_at()` to replace with NA replace_with_na_at(df, .vars = c(&quot;x&quot;, &quot;y&quot;, &quot;name&quot;), ~.x %in% c(&quot;N/A&quot;, &quot;missing&quot;,&quot;na&quot;, &quot; &quot;, &quot;Not Available&quot;)) ## # A tibble: 5 x 4 ## name x y z ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 &lt;NA&gt; 1 &lt;NA&gt; -100 ## 2 &lt;NA&gt; 3 &lt;NA&gt; -99 ## 3 &lt;NA&gt; NA 29 -98 ## 4 &lt;NA&gt; -99 25 -101 ## 5 John Smith -98 28 -1 # Use `replace_with_na_if()` to replace with NA the character values using `is.character` replace_with_na_if(df, .predicate = is.character, ~.x %in% c(&quot;N/A&quot;, &quot;missing&quot;,&quot;na&quot;, &quot; &quot;, &quot;Not Available&quot;)) ## # A tibble: 5 x 4 ## name x y z ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 &lt;NA&gt; 1 &lt;NA&gt; -100 ## 2 &lt;NA&gt; 3 &lt;NA&gt; -99 ## 3 &lt;NA&gt; NA 29 -98 ## 4 &lt;NA&gt; -99 25 -101 ## 5 John Smith -98 28 -1 # Use `replace_with_na_all()` to replace with NA replace_with_na_all(df, ~.x %in% c(&quot;N/A&quot;, &quot;missing&quot;,&quot;na&quot;, &quot; &quot;, &quot;Not Available&quot;)) ## # A tibble: 5 x 4 ## name x y z ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 &lt;NA&gt; 1 &lt;NA&gt; -100 ## 2 &lt;NA&gt; 3 &lt;NA&gt; -99 ## 3 &lt;NA&gt; NA 29 -98 ## 4 &lt;NA&gt; -99 25 -101 ## 5 John Smith -98 28 -1 Implicitly missing values Print the frogger data to have a look at it starwars Use complete() on the time variable to make implicit missing values explicit starwars_tidy &lt;- starwars %&gt;% complete(name, hair_color) # Use `fill()` to fill down the name variable in the starwars dataset starwars %&gt;% fill(name) ## # A tibble: 87 x 14 ## name height mass hair_color skin_color eye_color birth_year sex gender ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; ## 1 Luke… 172 77 blond fair blue 19 male mascu… ## 2 C-3PO 167 75 &lt;NA&gt; gold yellow 112 none mascu… ## 3 R2-D2 96 32 &lt;NA&gt; white, bl… red 33 none mascu… ## 4 Dart… 202 136 none white yellow 41.9 male mascu… ## 5 Leia… 150 49 brown light brown 19 fema… femin… ## 6 Owen… 178 120 brown, gr… light blue 52 male mascu… ## 7 Beru… 165 75 brown light blue 47 fema… femin… ## 8 R5-D4 97 32 &lt;NA&gt; white, red red NA none mascu… ## 9 Bigg… 183 84 black light brown 24 male mascu… ## 10 Obi-… 182 77 auburn, w… fair blue-gray 57 male mascu… ## # … with 77 more rows, and 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, ## # films &lt;list&gt;, vehicles &lt;list&gt;, starships &lt;list&gt; # Correctly fill() and complete() missing values so that our dataset becomes sensible starwars %&gt;% fill(name) %&gt;% complete(name, hair_color) ## # A tibble: 1,131 x 14 ## name hair_color height mass skin_color eye_color birth_year sex gender ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; ## 1 Ackb… auburn NA NA &lt;NA&gt; &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## 2 Ackb… auburn, g… NA NA &lt;NA&gt; &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## 3 Ackb… auburn, w… NA NA &lt;NA&gt; &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## 4 Ackb… black NA NA &lt;NA&gt; &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## 5 Ackb… blond NA NA &lt;NA&gt; &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## 6 Ackb… blonde NA NA &lt;NA&gt; &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## 7 Ackb… brown NA NA &lt;NA&gt; &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## 8 Ackb… brown, gr… NA NA &lt;NA&gt; &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## 9 Ackb… grey NA NA &lt;NA&gt; &lt;NA&gt; NA &lt;NA&gt; &lt;NA&gt; ## 10 Ackb… none 180 83 brown mot… orange 41 male mascu… ## # … with 1,121 more rows, and 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, ## # films &lt;list&gt;, vehicles &lt;list&gt;, starships &lt;list&gt; # Missing Data dependence # Exploring missingness dependence # Arrange by birth_year starwars %&gt;% arrange(birth_year) %&gt;% vis_miss() # this variable is important for missingness # Arrange by mass starwars %&gt;% arrange(mass) %&gt;% vis_miss() # this variable is important for missingness # Arrange by height starwars %&gt;% arrange(height) %&gt;% vis_miss() # this variable is important for missingness Tools to explore missing data dependence data to use airquality Create shadow matrix data with as_shadow() as_shadow(airquality) %&gt;% head() ## # A tibble: 6 x 6 ## Ozone_NA Solar.R_NA Wind_NA Temp_NA Month_NA Day_NA ## &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; ## 1 !NA !NA !NA !NA !NA !NA ## 2 !NA !NA !NA !NA !NA !NA ## 3 !NA !NA !NA !NA !NA !NA ## 4 !NA !NA !NA !NA !NA !NA ## 5 NA NA !NA !NA !NA !NA ## 6 !NA NA !NA !NA !NA !NA # Create nabular data by binding the shadow to the data with `bind_shadow()` bind_shadow(airquality) %&gt;% head() ## # A tibble: 6 x 12 ## Ozone Solar.R Wind Temp Month Day Ozone_NA Solar.R_NA Wind_NA Temp_NA ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; ## 1 41 190 7.4 67 5 1 !NA !NA !NA !NA ## 2 36 118 8 72 5 2 !NA !NA !NA !NA ## 3 12 149 12.6 74 5 3 !NA !NA !NA !NA ## 4 18 313 11.5 62 5 4 !NA !NA !NA !NA ## 5 NA NA 14.3 56 5 5 NA NA !NA !NA ## 6 28 NA 14.9 66 5 6 !NA NA !NA !NA ## # … with 2 more variables: Month_NA &lt;fct&gt;, Day_NA &lt;fct&gt; # Bind only the variables with missing values by using bind_shadow(only_miss = TRUE) bind_shadow(airquality, only_miss = TRUE) %&gt;% head() ## # A tibble: 6 x 8 ## Ozone Solar.R Wind Temp Month Day Ozone_NA Solar.R_NA ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;fct&gt; &lt;fct&gt; ## 1 41 190 7.4 67 5 1 !NA !NA ## 2 36 118 8 72 5 2 !NA !NA ## 3 12 149 12.6 74 5 3 !NA !NA ## 4 18 313 11.5 62 5 4 !NA !NA ## 5 NA NA 14.3 56 5 5 NA NA ## 6 28 NA 14.9 66 5 6 !NA NA performing group summaries bind_shadow() and group_by() humidity missingness (Ozone_NA) airquality %&gt;% bind_shadow() %&gt;% group_by(Ozone_NA) %&gt;% summarise(Wind_mean = mean(Wind), # calculate mean of Wind Wind_sd = sd(Wind)) # calculate standard deviation of Wind ## # A tibble: 2 x 3 ## Ozone_NA Wind_mean Wind_sd ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 !NA 9.86 3.57 ## 2 NA 10.3 3.39 # Repeat this, but calculating summaries for Temp airquality %&gt;% bind_shadow() %&gt;% group_by(Ozone_NA) %&gt;% summarise(Temp_mean = mean(Temp), Temp_sd = sd(Temp)) ## # A tibble: 2 x 3 ## Ozone_NA Temp_mean Temp_sd ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 !NA 77.9 9.49 ## 2 NA 77.9 9.53 # Summarise wind by the missingness of `Solar.R_NA` airquality %&gt;% bind_shadow() %&gt;% group_by(Solar.R_NA) %&gt;% summarise(Wind_mean = mean(Wind), # calculate mean of Wind Wind_sd = sd(Wind), # calculate standard deviation of Wind n_obs = n()) ## # A tibble: 2 x 4 ## Solar.R_NA Wind_mean Wind_sd n_obs ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; ## 1 !NA 10.0 3.51 146 ## 2 NA 9 3.97 7 # Summarise wind by missingness of `Solar.R_NA` and `Ozone_NA` airquality %&gt;% bind_shadow() %&gt;% group_by(Solar.R_NA, Ozone_NA) %&gt;% summarise(Temp_mean = mean(Temp), Temp_sd = sd(Temp), n_obs = n()) ## # A tibble: 4 x 5 ## # Groups: Solar.R_NA [2] ## Solar.R_NA Ozone_NA Temp_mean Temp_sd n_obs ## &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; ## 1 !NA !NA 77.8 9.53 111 ## 2 !NA NA 79.1 8.23 35 ## 3 NA !NA 79.6 9.24 5 ## 4 NA NA 56.5 0.707 2 Visualizing missingness across one variable First explore the missingness structure of airquality using vis_miss() vis_miss(airquality) # Explore the distribution of `Temp` for the missingness of `Ozone_NA` using `geom_density()` bind_shadow(airquality) %&gt;% ggplot(aes(x = Temp, color = Ozone_NA)) + geom_density() # Explore the distribution of Temp for the missingness of humidity (Solar.R_NA) using `geom_density()` bind_shadow(airquality) %&gt;% ggplot(aes(x = Temp, color = Solar.R_NA)) + geom_density() # Explore the distribution of Wind for the missingness of Solar.R_NA using `geom_density()` and facetting by the missingness of (`Solar.R_NA`). airquality %&gt;% bind_shadow() %&gt;% ggplot(aes(x = Wind)) + geom_density() + facet_wrap(~Solar.R_NA) # Build upon this visualisation by filling by the missingness of (`Solar.R_NA`). airquality %&gt;% bind_shadow() %&gt;% ggplot(aes(x = Wind, color = Solar.R_NA)) + geom_density() + facet_wrap(~Solar.R_NA) # Explore the distribution of wind for the missingness of air temperature using `geom_boxplot()` airquality %&gt;% bind_shadow() %&gt;% ggplot(aes(x = Ozone_NA, y = Wind)) + geom_boxplot() # Build upon this visualisation by facetting by the missingness of Ozone_NA airquality %&gt;% bind_shadow() %&gt;% ggplot(aes(x = Ozone_NA, y = Wind)) + geom_boxplot() + facet_wrap(~Ozone_NA) Visualizing missingness across two variables Explore the missingness in wind and air temperature, and display the missingness using geom_miss_point(): ggplot(airquality, aes(x = Wind, y = Temp)) + geom_miss_point() # Explore the missingness in Ozone and Solar.R, and display the missingness using `geom_miss_point()` ggplot(airquality, aes(x = Ozone, y = Solar.R)) + geom_miss_point() # Explore the missingness in Ozone and Solar.R, and display the missingness using `geom_miss_point()`. Facet by Temp to explore this further. ggplot(airquality, aes(x = Ozone, y = Solar.R)) + geom_miss_point() + facet_wrap(~Temp) # Use geom_miss_point() and facet_wrap to explore how the missingness in Ozone is different for missingness of Solar.R bind_shadow(airquality) %&gt;% ggplot(aes(x = Ozone, y = Solar.R)) + geom_miss_point() + facet_wrap(~Temp) # Use airquality() and facet_grid to explore how the missingness in wind_ew and air_temp_c is different for missingness of Temp AND by Month- by using `facet_grid(Temp ~ Month)` bind_shadow(airquality) %&gt;% ggplot(aes(x = Ozone, y = Solar.R)) + geom_miss_point() + facet_grid(Temp ~ Month) Filling in the blanks Impute the data below the range using impute_below. airquality_imp &lt;- impute_below_all(airquality) # Visualise the new missing values ggplot(airquality_imp, aes(x = Wind, y = Temp)) + geom_point() # Impute and track data with `bind_shadow`, `impute_below`, and `add_label_shadow` airquality_imp_track &lt;- bind_shadow(airquality) %&gt;% impute_below_all() %&gt;% add_label_shadow() # Look at the imputed values airquality_imp_track ## # A tibble: 153 x 13 ## Ozone Solar.R Wind Temp Month Day Ozone_NA Solar.R_NA Wind_NA Temp_NA ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; ## 1 41 190 7.4 67 5 1 !NA !NA !NA !NA ## 2 36 118 8 72 5 2 !NA !NA !NA !NA ## 3 12 149 12.6 74 5 3 !NA !NA !NA !NA ## 4 18 313 11.5 62 5 4 !NA !NA !NA !NA ## 5 -19.7 -33.6 14.3 56 5 5 NA NA !NA !NA ## 6 28 -33.1 14.9 66 5 6 !NA NA !NA !NA ## 7 23 299 8.6 65 5 7 !NA !NA !NA !NA ## 8 19 99 13.8 59 5 8 !NA !NA !NA !NA ## 9 8 19 20.1 61 5 9 !NA !NA !NA !NA ## 10 -18.5 194 8.6 69 5 10 NA !NA !NA !NA ## # … with 143 more rows, and 3 more variables: Month_NA &lt;fct&gt;, Day_NA &lt;fct&gt;, ## # any_missing &lt;chr&gt; Visualise imputed values in a scatterplot Visualise the missingness in wind and air temperature, coloring missing values with Ozone_NA: ggplot(airquality_imp_track, aes(x = Wind, y = Temp, color = Ozone_NA)) + geom_point() # Visualise humidity and air temp, coloring any missing cases using the variable any_missing ggplot(airquality_imp_track, aes(x = Wind, y = Temp, color = any_missing)) + geom_point() Create histogram of imputed data Explore the values of air_temp_c, visualising the amount of missings with air_temp_c_NA. p &lt;- ggplot(airquality_imp_track, aes(x = Ozone, fill = Ozone_NA)) + geom_histogram() # Expore the missings in humidity using humidity_NA p2 &lt;- ggplot(airquality_imp_track, aes(x = Solar.R, fill = Solar.R_NA)) + geom_histogram() # Explore the missings in airquality_imp_track according to Month, using `facet_wrap(~Month)`. p + facet_wrap(~Month) # Explore the missings in humidity according to Month, using `facet_wrap(~Month)`. p2 + facet_wrap(~Month) What makes a good imputation Impute the mean value and track the imputations airquality_imp_mean &lt;- bind_shadow(airquality) %&gt;% impute_mean_all() %&gt;% add_label_shadow() # Explore the mean values in wind in the imputed dataset ggplot(airquality_imp_mean, aes(x = Ozone_NA, y = Wind)) + geom_boxplot() # Explore the values in air wind in the imputed dataset ggplot(airquality_imp_mean, aes(x = Solar.R_NA, y = Wind)) + geom_boxplot() # Explore imputations in air temperature and wind, coloring by the variable, any_missing ggplot(airquality_imp_mean, aes(x = Wind, y = Temp, color = any_missing)) + geom_point() # Explore imputations in air temperature and wind, coloring by the variable, any_missing, and faceting by Month ggplot(airquality_imp_mean, aes(x = Wind, y = Temp, color = any_missing)) + geom_point() + facet_wrap(~ Month) # Gather the imputed data airquality_imp_mean_gather &lt;- shadow_long(airquality_imp_mean, Temp, Wind) # Inspect the data airquality_imp_mean_gather ## # A tibble: 306 x 4 ## variable value variable_NA value_NA ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 Wind 7.4 Wind_NA !NA ## 2 Wind 8 Wind_NA !NA ## 3 Wind 12.6 Wind_NA !NA ## 4 Wind 11.5 Wind_NA !NA ## 5 Wind 14.3 Wind_NA !NA ## 6 Wind 14.9 Wind_NA !NA ## 7 Wind 8.6 Wind_NA !NA ## 8 Wind 13.8 Wind_NA !NA ## 9 Wind 20.1 Wind_NA !NA ## 10 Wind 8.6 Wind_NA !NA ## # … with 296 more rows # Explore the imputations in a histogram ggplot(airquality_imp_mean_gather, aes(x = as.numeric(value), fill = value_NA)) + geom_histogram() + facet_wrap(~ variable) Performing imputations Impute Temp and Wind, and track missing values library(simputation) airquality_imp_lm_wind &lt;- airquality %&gt;% bind_shadow() %&gt;% impute_lm(Temp ~ Wind + Month) %&gt;% impute_lm(Temp ~ Wind + Day) %&gt;% add_label_shadow() # Plot the imputed values for Temp and Wind, colored by missingness ggplot(airquality_imp_lm_wind, aes(x = Temp, y = Wind, color = any_missing)) + geom_point() # Evaluating and comparing imputations ## Bind the models together bound_models &lt;- bind_rows(mean = airquality_imp_mean, lm_wind = airquality_imp_lm_wind, .id = &quot;imp_model&quot;) # Inspect the values of air_temp and humidity as a scatterplot ggplot(bound_models, aes(x = Wind, y = Temp, color = any_missing)) + geom_point() + facet_wrap(~imp_model) # Build a model adding Month to the outcome airquality_imp_lm_wind_month &lt;- bind_shadow(airquality) %&gt;% impute_lm(Temp ~ Wind + Day + Month) %&gt;% impute_lm(Temp ~ Wind + Ozone + Month) %&gt;% add_label_shadow() # Bind the mean, lm_wind, and lm_wind_year models together bound_models &lt;- bind_rows(mean = airquality_imp_mean, lm_wind = airquality_imp_lm_wind, lm_wind_year = airquality_imp_lm_wind_month, .id = &quot;imp_model&quot;) # Explore air_temp and humidity, coloring by any missings, and faceting by imputation model ggplot(bound_models, aes(x = Wind, y = Temp, color = any_missing)) + geom_point() + facet_wrap(~imp_model) # Gather the data and inspect the distributions of the values bound_models_gather &lt;- bound_models %&gt;% select(Temp, Wind, any_missing, imp_model) %&gt;% gather(key = &quot;key&quot;, value = &quot;value&quot;, -any_missing, -imp_model) # Inspect the distribution for each variable, for each model ggplot(bound_models_gather, aes(x = imp_model, y = value, color = imp_model)) + geom_boxplot() + facet_wrap(~key, scales = &quot;free_y&quot;) # Inspect the imputed values bound_models_gather %&gt;% filter(any_missing == &quot;Missing&quot;) %&gt;% ggplot(aes(x = imp_model, y = value, color = imp_model)) + geom_boxplot() + facet_wrap(~key, scales = &quot;free_y&quot;) Combining and comparing many imputation models Create an imputed dataset using a linear models airquality_imp_lm_all &lt;- bind_shadow(airquality) %&gt;% add_label_shadow() %&gt;% impute_lm(Temp ~ Wind + Day + Month) %&gt;% impute_lm(Temp ~ Wind + Ozone + Month) # Bind the datasets cc = airquality imp_lm_wind = as.data.frame(airquality_imp_lm_wind) %&gt;% mutate_if(is.factor, ~ as.numeric(levels(.x))[.x]) ## Warning in ~as.numeric(levels(.x))[.x]: NAs introduced by coercion ## Warning in ~as.numeric(levels(.x))[.x]: NAs introduced by coercion ## Warning in ~as.numeric(levels(.x))[.x]: NAs introduced by coercion ## Warning in ~as.numeric(levels(.x))[.x]: NAs introduced by coercion ## Warning in ~as.numeric(levels(.x))[.x]: NAs introduced by coercion ## Warning in ~as.numeric(levels(.x))[.x]: NAs introduced by coercion imp_lm_all = as.data.frame(airquality_imp_lm_all) %&gt;% mutate_if(is.factor, ~ as.numeric(levels(.x))[.x]) ## Warning in ~as.numeric(levels(.x))[.x]: NAs introduced by coercion ## Warning in ~as.numeric(levels(.x))[.x]: NAs introduced by coercion ## Warning in ~as.numeric(levels(.x))[.x]: NAs introduced by coercion ## Warning in ~as.numeric(levels(.x))[.x]: NAs introduced by coercion ## Warning in ~as.numeric(levels(.x))[.x]: NAs introduced by coercion ## Warning in ~as.numeric(levels(.x))[.x]: NAs introduced by coercion bound_models &lt;- bind_rows(airquality, imp_lm_wind, imp_lm_all, .id = &quot;imp_model&quot;) # Look at the models head(bound_models,4) ## imp_model Ozone Solar.R Wind Temp Month Day Ozone_NA Solar.R_NA Wind_NA ## 1 1 41 190 7.4 67 5 1 NA NA NA ## 2 1 36 118 8.0 72 5 2 NA NA NA ## 3 1 12 149 12.6 74 5 3 NA NA NA ## 4 1 18 313 11.5 62 5 4 NA NA NA ## Temp_NA Month_NA Day_NA any_missing ## 1 NA NA NA &lt;NA&gt; ## 2 NA NA NA &lt;NA&gt; ## 3 NA NA NA &lt;NA&gt; ## 4 NA NA NA &lt;NA&gt; # Create the model summary for each dataset library(broom) library(tidyr) model_summary &lt;- bound_models %&gt;% group_by(imp_model) %&gt;% nest() %&gt;% mutate(mod = map(data, ~lm(Temp ~ Wind + Ozone + Month, data = .)), res = map(mod, residuals), pred = map(mod, predict), tidy = map(mod, tidy)) # Explore the coefficients in the model model_summary %&gt;% select(imp_model,tidy) %&gt;% unnest() ## Warning: `cols` is now required when using unnest(). ## Please use `cols = c(tidy)` ## # A tibble: 12 x 6 ## # Groups: imp_model [3] ## imp_model term estimate std.error statistic p.value ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 (Intercept) 59.0 4.11 14.4 3.66e-27 ## 2 1 Wind -0.242 0.203 -1.19 2.35e- 1 ## 3 1 Ozone 0.171 0.0218 7.82 3.22e-12 ## 4 1 Month 1.96 0.398 4.92 3.03e- 6 ## 5 2 (Intercept) 59.0 4.11 14.4 3.66e-27 ## 6 2 Wind -0.242 0.203 -1.19 2.35e- 1 ## 7 2 Ozone 0.171 0.0218 7.82 3.22e-12 ## 8 2 Month 1.96 0.398 4.92 3.03e- 6 ## 9 3 (Intercept) 59.0 4.11 14.4 3.66e-27 ## 10 3 Wind -0.242 0.203 -1.19 2.35e- 1 ## 11 3 Ozone 0.171 0.0218 7.82 3.22e-12 ## 12 3 Month 1.96 0.398 4.92 3.03e- 6 best_model &lt;- &quot;imp_lm_all&quot; "]
]
